FROM mohaseeb/raspberrypi3-python-opencv
#FROM drache93/resin-opencv


#FROM resin/armv7hf-debian:latest
#FROM resin/raspberrypi3-python:latest

#FROM resin/rpi-raspbian:wheezy-2015-01-15

# base-image for node on any machine using a template variable,
# see more about dockerfile templates here: http://docs.resin.io/deployment/docker-templates/
# and about resin base images here: http://docs.resin.io/runtime/resin-base-images/
# Note the node:slim image doesn't have node-gyp
#FROM resin/%%RESIN_MACHINE_NAME%%-node:6-slim

# Defines our working directory in container
WORKDIR /usr/src/

# Enable systemd init system in container
ENV INITSYSTEM on

#RUN sudo apt-get update && sudo apt-get install gcc
#&& sudo apt-get upgrade
#&& sudo apt-get install gcc
#sudo apt-get install libhdf5-dev

#RUN wget ftp://ftp.fu-berlin.de/unix/languages/gcc/releases/gcc-5.4.0/gcc-5.4.0.tar.bz2 && \
#	tar xf gcc-5.4.0.tar.bz2 && cd gcc-5.4.0 && contrib/download_prerequisites && \
#	mkdir obj && cd obj && ../configure -v --enable-languages=c,c++ --with-cpu=cortex-a53 \
#	--with-fpu=neon-fp-armv8 --with-float=hard --build=arm-linux-gnueabihf && sudo make install

RUN git clone https://ionita-sonah:sonahplusgitgleichlove@github.com/hippolyt/recorder.git && cd recorder && cmake . && make

RUN git clone https://ionita-sonah:sonahplusgitgleichlove@github.com/hippolyt/SoNah_Sensor.git /usr/src/opencv

# compiling opencv code + workaround for hdf5 library
RUN sudo apt-get clean && sudo apt-get upgrade && sudo apt-get update && sudo apt-get -f install && \
    sudo apt-get install -y --force-yes libhdf5-8 libhdf5-serial-dev libhdf5-dev libhdf5-cpp-8 && \
    cd /usr/lib/arm-linux-gnueabihf/ && sudo ln -sf libhdf5_serial.so.8.0.2 libhdf5.so && \
    sudo ln -sf libhdf5_serial_hl.so.8.0.2 libhdf5_hl.so && \
    sudo ln -sf libhdf5_serial.so libhdf5.so && \
    sudo ln -sf libhdf5_serial_hl.so libhdf5_hl.so && \
    sudo echo 'export CPATH="/usr/include/hdf5/serial/"' >> /root/.bashrc && \
    export CPATH="/usr/include/hdf5/serial/" && sudo apt-get install libjsoncpp-dev && cd /usr/src/opencv && cmake . && make

RUN git clone https://ionita-sonah:sonahplusgitgleichlove@github.com/hippolyt/sonahsensor-metrics-collector.git /usr/src/metrics-collector && cd metrics-collector && git checkout --track origin/unstable

RUN git clone https://ionita-sonah:sonahplusgitgleichlove@github.com/hippolyt/sonahsensor-rescue-utils.git /usr/src/rescue-utils && cd rescue-utils && git checkout --track origin/unstable

ADD test.py test.py

# copy vpn keys (.crt and .key to the expected location on target) together with the certificate and configuration files
COPY vpn_keys/ /etc/openvpn/

# copy scripts for registering sensor together with the needed mongo ssh keys
COPY register_sensor/ register_sensor/
RUN chmod +x register_sensor/registerkey && chmod 600 register_sensor/mongo_keys/mongokey

RUN cd register_sensor/ && yes | ./registerkey
